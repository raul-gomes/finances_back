services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile
      - ./mongod.conf:/etc/mongod.conf
    command: mongod --config /etc/mongod.conf
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet || exit 1
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 90s
    networks:
      - mongo-net
  mongo-setup:
    image: mongo:latest
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./setup.sh:/etc/setup.sh
      - ./init-mongo.js:/etc/init-mongo.js
    entrypoint: ["/bin/bash", "/etc/setup.sh"]
    restart: "no"
    networks:
      - mongo-net

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
        - ME_CONFIG_MONGODB_URL=mongodb://${ME_CONFIG_MONGODB_ADMINUSERNAME}:${ME_CONFIG_MONGODB_ADMINPASSWORD}@${ME_CONFIG_MONGODB_SERVER}:${ME_CONFIG_MONGODB_PORT}/${MONGO_INITDB_DATABASE}?authSource=${ME_CONFIG_MONGODB_AUTH_DATABASE}&replicaSet=${ME_REPLICA_SET}
        - ME_CONFIG_BASICAUTH_USERNAME=${ME_CONFIG_BASICAUTH_USERNAME}
        - ME_CONFIG_BASICAUTH_PASSWORD=${ME_CONFIG_BASICAUTH_PASSWORD}
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - mongo-net

networks:
  mongo-net:

volumes:
  mongo-data:
