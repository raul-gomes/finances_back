2025-08-28 14:08:54 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 14:08:54 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 14:08:54 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 14:08:54 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 14:08:54 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 14:08:54 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 14:08:54 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 14:13:23 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 14:13:23 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 14:13:23 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 14:13:23 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 14:13:23 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 14:13:23 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 14:13:23 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 14:13:23 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 14:13:23 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 14:13:23 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 14:17:41 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 14:17:41 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 14:17:41 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 14:17:41 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 14:17:41 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 14:17:41 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 14:17:41 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 14:17:41 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 14:17:41 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 14:17:41 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 14:19:58 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 14:19:58 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 14:19:58 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 14:19:58 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 14:19:58 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 14:19:58 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 14:19:58 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 14:19:58 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 14:19:58 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 14:19:58 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 14:20:01 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 14:20:01 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 14:20:01 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 14:20:03 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 14:20:03 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 14:20:03 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 14:20:03 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 14:20:03 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 14:20:03 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 14:20:03 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 14:20:18 | INFO     | app.main:root:54 | {} | Endpoint inicializado
2025-08-28 14:21:08 | INFO     | app.routes.transacoes_routes:criar_transacao:46 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 123.1, 'descricao': 'Pagamento cliente XYZ', 'categoria': 'alimentação', 'subcategoria': 'restaurante', 'forma_pagamento': <TipoPagamento.CREDITO: 'credito'>, 'e_parcelado': False, 'parcelas': 1, 'total_parcelas': 10, 'natureza_transacao': <NaturezaTransacao.PJ: 'pj'>, 'data_transacao': datetime.datetime(2025, 8, 7, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 14:21:08 | DEBUG    | app.routes.transacoes_routes:criar_transacao:55 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b09004b18e182f5a927515'} | Resultado insert_one
2025-08-28 14:21:08 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:67 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b09004b18e182f5a927515'} | Transação criada com sucesso
2025-08-28 14:21:27 | INFO     | app.routes.transacoes_routes:buscar_transacao_por_id:98 | {'http_method': 'GET', 'endpoint': '/transacoes/68b09004b18e182f5a927515', 'transaction_id': '68b09004b18e182f5a927515'} | Buscando transação no banco
2025-08-28 14:21:27 | SUCCESS  | app.routes.transacoes_routes:buscar_transacao_por_id:109 | {'http_method': 'GET', 'endpoint': '/transacoes/68b09004b18e182f5a927515', 'transaction_id': '68b09004b18e182f5a927515'} | Transação retornada com sucesso
2025-08-28 14:56:45 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 14:56:45 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 14:56:45 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 14:56:45 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 14:56:45 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 14:56:45 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 14:56:45 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 14:56:45 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 14:56:45 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 14:56:45 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 14:58:18 | INFO     | app.routes.categorias_routes:listar_categorias:33 | {'http_method': 'GET', 'endpoint': '/categorias'} | Listando todas as categorias
2025-08-28 14:58:18 | SUCCESS  | app.routes.categorias_routes:listar_categorias:49 | {'http_method': 'GET', 'endpoint': '/categorias'} | 0 categorias listadas
2025-08-28 15:09:43 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 15:09:43 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 15:09:43 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 15:09:44 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 15:09:44 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 15:09:44 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 15:09:44 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 15:09:44 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 15:09:44 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 15:09:44 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 15:13:13 | INFO     | app.routes.categorias_routes:criar_categoria:72 | {'http_method': 'POST', 'endpoint': '/categorias', 'data': {'categoria_nome': 'Marketing', 'limite': 5000.0, 'subcategorias': ['Google Ads', 'Facebook Ads', 'Design Gráfico']}} | Criando categoria
2025-08-28 15:13:13 | DEBUG    | app.routes.categorias_routes:criar_categoria:80 | {'http_method': 'POST', 'endpoint': '/categorias', 'acknowledged': True, 'inserted_id': '68b09c391be6500909ce6ef3'} | Resultado insert_one
2025-08-28 15:13:33 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 15:13:33 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 15:13:33 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 15:13:38 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 15:13:33 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 15:13:33 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 15:13:33 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 15:13:33 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 15:13:33 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 15:13:33 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 15:13:33 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 15:13:34 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 15:13:34 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 15:13:34 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 15:13:34 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 15:13:34 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 15:13:34 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 15:13:40 | INFO     | app.routes.categorias_routes:criar_categoria:72 | {'http_method': 'POST', 'endpoint': '/categorias', 'data': {'categoria_nome': 'Marketing', 'limite': 5000.0, 'subcategorias': ['Google Ads', 'Facebook Ads', 'Design Gráfico']}} | Criando categoria
2025-08-28 15:13:40 | DEBUG    | app.routes.categorias_routes:criar_categoria:80 | {'http_method': 'POST', 'endpoint': '/categorias', 'acknowledged': True, 'inserted_id': '68b09c5428b51f944925e6eb'} | Resultado insert_one
2025-08-28 15:15:52 | INFO     | app.routes.categorias_routes:criar_categoria:72 | {'http_method': 'POST', 'endpoint': '/categorias', 'data': {'categoria_nome': 'Saúde', 'limite': 1500.0, 'subcategorias': ['Plano de Saúde', 'Medicamentos', 'Consultas e Exames']}} | Criando categoria
2025-08-28 15:15:52 | DEBUG    | app.routes.categorias_routes:criar_categoria:80 | {'http_method': 'POST', 'endpoint': '/categorias', 'acknowledged': True, 'inserted_id': '68b09cd828b51f944925e6ec'} | Resultado insert_one
2025-08-28 15:17:16 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 15:17:16 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 15:17:16 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 15:17:21 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 15:17:21 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 15:17:21 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 15:17:21 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 15:17:21 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 15:17:21 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 15:17:21 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 15:18:47 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 15:18:47 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 15:18:47 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 15:18:47 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 15:18:47 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 15:18:47 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 15:18:47 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 15:18:47 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 15:18:47 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 15:18:47 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 15:19:09 | INFO     | app.routes.categorias_routes:criar_categoria:72 | {'http_method': 'POST', 'endpoint': '/categorias', 'data': {'categoria_nome': 'Saúde', 'limite': 1500.0, 'subcategorias': ['Plano de Saúde', 'Medicamentos', 'Consultas e Exames']}} | Criando categoria
2025-08-28 15:19:09 | DEBUG    | app.routes.categorias_routes:criar_categoria:80 | {'http_method': 'POST', 'endpoint': '/categorias', 'acknowledged': True, 'inserted_id': '68b09d9da76e269d1b11395d'} | Resultado insert_one
2025-08-28 15:23:42 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 15:23:42 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 15:23:42 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 15:23:42 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 15:23:42 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 15:23:42 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 15:23:42 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 15:23:42 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 15:23:42 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 15:23:42 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 15:23:49 | INFO     | app.routes.categorias_routes:criar_categoria:72 | {'http_method': 'POST', 'endpoint': '/categorias', 'data': {'categoria_nome': 'Saúde', 'limite': 1500.0, 'subcategorias': ['Plano de Saúde', 'Medicamentos', 'Consultas e Exames']}} | Criando categoria
2025-08-28 15:23:49 | DEBUG    | app.routes.categorias_routes:criar_categoria:80 | {'http_method': 'POST', 'endpoint': '/categorias', 'acknowledged': True, 'inserted_id': '68b09eb5292ef6b77b237770'} | Resultado insert_one
2025-08-28 15:23:49 | SUCCESS  | app.routes.categorias_routes:criar_categoria:96 | {'http_method': 'POST', 'endpoint': '/categorias', 'category_id': '68b09eb5292ef6b77b237770'} | Categoria criada com sucesso
2025-08-28 15:24:08 | INFO     | app.routes.categorias_routes:criar_categoria:72 | {'http_method': 'POST', 'endpoint': '/categorias', 'data': {'categoria_nome': 'Educação', 'limite': 3000.0, 'subcategorias': ['Cursos Online', 'Material Didático', 'Workshops e Palestras']}} | Criando categoria
2025-08-28 15:24:08 | DEBUG    | app.routes.categorias_routes:criar_categoria:80 | {'http_method': 'POST', 'endpoint': '/categorias', 'acknowledged': True, 'inserted_id': '68b09ec8292ef6b77b237771'} | Resultado insert_one
2025-08-28 15:24:08 | SUCCESS  | app.routes.categorias_routes:criar_categoria:96 | {'http_method': 'POST', 'endpoint': '/categorias', 'category_id': '68b09ec8292ef6b77b237771'} | Categoria criada com sucesso
2025-08-28 15:24:15 | INFO     | app.routes.categorias_routes:criar_categoria:72 | {'http_method': 'POST', 'endpoint': '/categorias', 'data': {'categoria_nome': 'Lazer', 'limite': 1200.0, 'subcategorias': ['Cinema e Teatro', 'Viagens', 'Hobbies']}} | Criando categoria
2025-08-28 15:24:15 | DEBUG    | app.routes.categorias_routes:criar_categoria:80 | {'http_method': 'POST', 'endpoint': '/categorias', 'acknowledged': True, 'inserted_id': '68b09ecf292ef6b77b237772'} | Resultado insert_one
2025-08-28 15:24:15 | SUCCESS  | app.routes.categorias_routes:criar_categoria:96 | {'http_method': 'POST', 'endpoint': '/categorias', 'category_id': '68b09ecf292ef6b77b237772'} | Categoria criada com sucesso
2025-08-28 15:24:22 | INFO     | app.routes.categorias_routes:criar_categoria:72 | {'http_method': 'POST', 'endpoint': '/categorias', 'data': {'categoria_nome': 'Saúde', 'limite': 1500.0, 'subcategorias': ['Plano de Saúde', 'Medicamentos', 'Consultas e Exames']}} | Criando categoria
2025-08-28 15:24:22 | DEBUG    | app.routes.categorias_routes:criar_categoria:80 | {'http_method': 'POST', 'endpoint': '/categorias', 'acknowledged': True, 'inserted_id': '68b09ed6292ef6b77b237773'} | Resultado insert_one
2025-08-28 15:24:22 | SUCCESS  | app.routes.categorias_routes:criar_categoria:96 | {'http_method': 'POST', 'endpoint': '/categorias', 'category_id': '68b09ed6292ef6b77b237773'} | Categoria criada com sucesso
2025-08-28 15:24:29 | INFO     | app.routes.categorias_routes:criar_categoria:72 | {'http_method': 'POST', 'endpoint': '/categorias', 'data': {'categoria_nome': 'Transporte', 'limite': 800.0, 'subcategorias': ['Combustível', 'Transporte Público', 'Táxi / App de Corrida']}} | Criando categoria
2025-08-28 15:24:29 | DEBUG    | app.routes.categorias_routes:criar_categoria:80 | {'http_method': 'POST', 'endpoint': '/categorias', 'acknowledged': True, 'inserted_id': '68b09edd292ef6b77b237774'} | Resultado insert_one
2025-08-28 15:24:29 | SUCCESS  | app.routes.categorias_routes:criar_categoria:96 | {'http_method': 'POST', 'endpoint': '/categorias', 'category_id': '68b09edd292ef6b77b237774'} | Categoria criada com sucesso
2025-08-28 15:24:34 | INFO     | app.routes.categorias_routes:criar_categoria:72 | {'http_method': 'POST', 'endpoint': '/categorias', 'data': {'categoria_nome': 'Alimentação', 'limite': 2000.0, 'subcategorias': ['Supermercado', 'Restaurantes', 'Lanches e Delivery']}} | Criando categoria
2025-08-28 15:24:34 | DEBUG    | app.routes.categorias_routes:criar_categoria:80 | {'http_method': 'POST', 'endpoint': '/categorias', 'acknowledged': True, 'inserted_id': '68b09ee2292ef6b77b237775'} | Resultado insert_one
2025-08-28 15:24:34 | SUCCESS  | app.routes.categorias_routes:criar_categoria:96 | {'http_method': 'POST', 'endpoint': '/categorias', 'category_id': '68b09ee2292ef6b77b237775'} | Categoria criada com sucesso
2025-08-28 15:26:15 | INFO     | app.routes.categorias_routes:listar_categorias:33 | {'http_method': 'GET', 'endpoint': '/categorias'} | Listando todas as categorias
2025-08-28 15:26:51 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 15:26:51 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 15:26:51 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 15:26:52 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 15:26:52 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 15:26:52 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 15:26:52 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 15:26:52 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 15:26:52 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 15:26:52 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 15:26:53 | INFO     | app.routes.categorias_routes:listar_categorias:33 | {'http_method': 'GET', 'endpoint': '/categorias'} | Listando todas as categorias
2025-08-28 15:26:53 | SUCCESS  | app.routes.categorias_routes:listar_categorias:49 | {'http_method': 'GET', 'endpoint': '/categorias'} | 10 categorias listadas
2025-08-28 15:27:43 | INFO     | app.routes.transacoes_routes:criar_transacao:46 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 12000.0, 'descricao': 'Faturamento projeto Alpha', 'categoria': 'Serviços', 'subcategoria': 'Consultoria', 'forma_pagamento': <TipoPagamento.CREDITO: 'credito'>, 'e_parcelado': True, 'parcelas': 3, 'total_parcelas': 3, 'natureza_transacao': <NaturezaTransacao.PJ: 'pj'>, 'data_transacao': datetime.datetime(2025, 8, 15, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:27:43 | DEBUG    | app.routes.transacoes_routes:criar_transacao:55 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b09f9fc1d01012006f5102'} | Resultado insert_one
2025-08-28 15:27:43 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:67 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b09f9fc1d01012006f5102'} | Transação criada com sucesso
2025-08-28 15:27:52 | INFO     | app.routes.transacoes_routes:criar_transacao:46 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 2500.5, 'descricao': 'Venda de produto artesanal', 'categoria': 'Vendas', 'subcategoria': 'Artesanato', 'forma_pagamento': <TipoPagamento.PIX: 'pix'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PF: 'pf'>, 'data_transacao': datetime.datetime(2025, 8, 20, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:27:52 | DEBUG    | app.routes.transacoes_routes:criar_transacao:55 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b09fa8c1d01012006f5103'} | Resultado insert_one
2025-08-28 15:27:52 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:67 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b09fa8c1d01012006f5103'} | Transação criada com sucesso
2025-08-28 15:27:59 | INFO     | app.routes.transacoes_routes:criar_transacao:46 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 8000.0, 'descricao': 'Retainer mensal cliente Beta', 'categoria': 'Serviços', 'subcategoria': 'Suporte', 'forma_pagamento': <TipoPagamento.DEBITO: 'debito'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PJ: 'pj'>, 'data_transacao': datetime.datetime(2025, 9, 5, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:27:59 | DEBUG    | app.routes.transacoes_routes:criar_transacao:55 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b09fafc1d01012006f5104'} | Resultado insert_one
2025-08-28 15:27:59 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:67 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b09fafc1d01012006f5104'} | Transação criada com sucesso
2025-08-28 15:28:06 | INFO     | app.routes.transacoes_routes:criar_transacao:46 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 670.75, 'descricao': 'Recebimento de venda online', 'categoria': 'Vendas', 'subcategoria': 'E-commerce', 'forma_pagamento': <TipoPagamento.CREDITO: 'credito'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PF: 'pf'>, 'data_transacao': datetime.datetime(2025, 9, 12, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:28:06 | DEBUG    | app.routes.transacoes_routes:criar_transacao:55 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b09fb6c1d01012006f5105'} | Resultado insert_one
2025-08-28 15:28:06 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:67 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b09fb6c1d01012006f5105'} | Transação criada com sucesso
2025-08-28 15:28:20 | INFO     | app.routes.transacoes_routes:criar_transacao:46 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 15000.0, 'descricao': 'Pagamento antecipado projeto Delta', 'categoria': 'Projetos', 'subcategoria': 'Desenvolvimento', 'forma_pagamento': <TipoPagamento.PIX: 'pix'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PJ: 'pj'>, 'data_transacao': datetime.datetime(2025, 9, 25, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:28:20 | DEBUG    | app.routes.transacoes_routes:criar_transacao:55 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b09fc4c1d01012006f5106'} | Resultado insert_one
2025-08-28 15:28:20 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:67 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b09fc4c1d01012006f5106'} | Transação criada com sucesso
2025-08-28 15:28:28 | INFO     | app.routes.transacoes_routes:criar_transacao:46 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 300.0, 'descricao': 'Venda de artesanato em feira', 'categoria': 'Vendas', 'subcategoria': 'Feira', 'forma_pagamento': <TipoPagamento.DEBITO: 'debito'>, 'e_parcelado': True, 'parcelas': 2, 'total_parcelas': 2, 'natureza_transacao': <NaturezaTransacao.PF: 'pf'>, 'data_transacao': datetime.datetime(2025, 8, 30, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:28:28 | DEBUG    | app.routes.transacoes_routes:criar_transacao:55 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b09fccc1d01012006f5107'} | Resultado insert_one
2025-08-28 15:28:28 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:67 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b09fccc1d01012006f5107'} | Transação criada com sucesso
2025-08-28 15:38:07 | INFO     | app.routes.transacoes_routes:criar_transacao:46 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 3500.0, 'descricao': 'Reembolso de despesas de viagem corporativa', 'categoria': 'Alimentação', 'subcategoria': 'Restaurantes', 'forma_pagamento': <TipoPagamento.PIX: 'pix'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PJ: 'pj'>, 'data_transacao': datetime.datetime(2025, 9, 10, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:38:07 | DEBUG    | app.routes.transacoes_routes:criar_transacao:55 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a20fc1d01012006f5108'} | Resultado insert_one
2025-08-28 15:38:07 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:67 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a20fc1d01012006f5108'} | Transação criada com sucesso
2025-08-28 15:38:13 | INFO     | app.routes.transacoes_routes:criar_transacao:46 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 450.75, 'descricao': 'Venda de marmitas saudáveis', 'categoria': 'Alimentação', 'subcategoria': 'Lanches e Delivery', 'forma_pagamento': <TipoPagamento.CREDITO: 'credito'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PF: 'pf'>, 'data_transacao': datetime.datetime(2025, 8, 22, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:38:13 | DEBUG    | app.routes.transacoes_routes:criar_transacao:55 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a215c1d01012006f5109'} | Resultado insert_one
2025-08-28 15:38:13 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:67 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a215c1d01012006f5109'} | Transação criada com sucesso
2025-08-28 15:38:20 | INFO     | app.routes.transacoes_routes:criar_transacao:46 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 9200.0, 'descricao': 'Faturamento mensal serviço de transporte interno', 'categoria': 'Transporte', 'subcategoria': 'Combustível', 'forma_pagamento': <TipoPagamento.DEBITO: 'debito'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PJ: 'pj'>, 'data_transacao': datetime.datetime(2025, 9, 5, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:38:20 | DEBUG    | app.routes.transacoes_routes:criar_transacao:55 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a21cc1d01012006f510a'} | Resultado insert_one
2025-08-28 15:38:20 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:67 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a21cc1d01012006f510a'} | Transação criada com sucesso
2025-08-28 15:38:25 | INFO     | app.routes.transacoes_routes:criar_transacao:46 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 300.0, 'descricao': 'Reembolso corrida Uber', 'categoria': 'Transporte', 'subcategoria': 'Táxi / App de Corrida', 'forma_pagamento': <TipoPagamento.PIX: 'pix'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PF: 'pf'>, 'data_transacao': datetime.datetime(2025, 8, 18, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:38:25 | DEBUG    | app.routes.transacoes_routes:criar_transacao:55 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a221c1d01012006f510b'} | Resultado insert_one
2025-08-28 15:38:25 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:67 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a221c1d01012006f510b'} | Transação criada com sucesso
2025-08-28 15:38:32 | INFO     | app.routes.transacoes_routes:criar_transacao:46 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 15000.0, 'descricao': 'Venda de 50 vagas em curso Python', 'categoria': 'Educação', 'subcategoria': 'Cursos Online', 'forma_pagamento': <TipoPagamento.CREDITO: 'credito'>, 'e_parcelado': True, 'parcelas': 5, 'total_parcelas': 5, 'natureza_transacao': <NaturezaTransacao.PJ: 'pj'>, 'data_transacao': datetime.datetime(2025, 9, 12, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:38:32 | DEBUG    | app.routes.transacoes_routes:criar_transacao:55 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a228c1d01012006f510c'} | Resultado insert_one
2025-08-28 15:38:32 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:67 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a228c1d01012006f510c'} | Transação criada com sucesso
2025-08-28 15:38:38 | INFO     | app.routes.transacoes_routes:criar_transacao:46 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 120.0, 'descricao': 'Venda de ingressos de cinema', 'categoria': 'Lazer', 'subcategoria': 'Cinema e Teatro', 'forma_pagamento': <TipoPagamento.DEBITO: 'debito'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PF: 'pf'>, 'data_transacao': datetime.datetime(2025, 8, 28, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:38:38 | DEBUG    | app.routes.transacoes_routes:criar_transacao:55 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a22ec1d01012006f510d'} | Resultado insert_one
2025-08-28 15:38:38 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:67 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a22ec1d01012006f510d'} | Transação criada com sucesso
2025-08-28 15:44:58 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 15:44:58 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 15:44:58 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 15:44:59 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 15:44:59 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 15:44:59 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 15:44:59 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 15:44:59 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 15:44:59 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 15:44:59 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 15:45:08 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 15:45:08 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 15:45:08 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 15:45:08 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 15:45:08 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 15:45:08 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 15:45:08 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 15:45:08 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 15:45:08 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 15:45:08 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 15:45:14 | INFO     | app.routes.transacoes_routes:listar_transacoes:46 | {'http_method': 'GET', 'endpoint': '/transacoes'} | Listando todas as transações
2025-08-28 15:45:14 | SUCCESS  | app.routes.transacoes_routes:listar_transacoes:54 | {'http_method': 'GET', 'endpoint': '/transacoes', 'count': 13} | Total de transações retornadas
2025-08-28 15:46:43 | INFO     | app.routes.transacoes_routes:remover_transacao:253 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a22ec1d01012006f510d', 'transaction_id': '68b0a22ec1d01012006f510d'} | Iniciando remoção de transação
2025-08-28 15:46:43 | DEBUG    | app.routes.transacoes_routes:remover_transacao:264 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a22ec1d01012006f510d', 'transaction_id': '68b0a22ec1d01012006f510d', 'deleted_count': 1} | Resultado delete_one
2025-08-28 15:46:43 | SUCCESS  | app.routes.transacoes_routes:remover_transacao:270 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a22ec1d01012006f510d', 'transaction_id': '68b0a22ec1d01012006f510d'} | Transação removida com sucesso
2025-08-28 15:46:57 | INFO     | app.routes.transacoes_routes:remover_transacao:253 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a228c1d01012006f510c', 'transaction_id': '68b0a228c1d01012006f510c'} | Iniciando remoção de transação
2025-08-28 15:46:57 | DEBUG    | app.routes.transacoes_routes:remover_transacao:264 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a228c1d01012006f510c', 'transaction_id': '68b0a228c1d01012006f510c', 'deleted_count': 1} | Resultado delete_one
2025-08-28 15:46:57 | SUCCESS  | app.routes.transacoes_routes:remover_transacao:270 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a228c1d01012006f510c', 'transaction_id': '68b0a228c1d01012006f510c'} | Transação removida com sucesso
2025-08-28 15:47:01 | INFO     | app.routes.transacoes_routes:remover_transacao:253 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a228c1d01012006f510c', 'transaction_id': '68b0a228c1d01012006f510c'} | Iniciando remoção de transação
2025-08-28 15:47:01 | WARNING  | app.routes.transacoes_routes:remover_transacao:260 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a228c1d01012006f510c', 'transaction_id': '68b0a228c1d01012006f510c'} | Transação não encontrada para remoção
2025-08-28 15:47:08 | INFO     | app.routes.transacoes_routes:remover_transacao:253 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a221c1d01012006f510b', 'transaction_id': '68b0a221c1d01012006f510b'} | Iniciando remoção de transação
2025-08-28 15:47:08 | DEBUG    | app.routes.transacoes_routes:remover_transacao:264 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a221c1d01012006f510b', 'transaction_id': '68b0a221c1d01012006f510b', 'deleted_count': 1} | Resultado delete_one
2025-08-28 15:47:08 | SUCCESS  | app.routes.transacoes_routes:remover_transacao:270 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a221c1d01012006f510b', 'transaction_id': '68b0a221c1d01012006f510b'} | Transação removida com sucesso
2025-08-28 15:47:17 | INFO     | app.routes.transacoes_routes:remover_transacao:253 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a21cc1d01012006f510a', 'transaction_id': '68b0a21cc1d01012006f510a'} | Iniciando remoção de transação
2025-08-28 15:47:17 | DEBUG    | app.routes.transacoes_routes:remover_transacao:264 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a21cc1d01012006f510a', 'transaction_id': '68b0a21cc1d01012006f510a', 'deleted_count': 1} | Resultado delete_one
2025-08-28 15:47:17 | SUCCESS  | app.routes.transacoes_routes:remover_transacao:270 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a21cc1d01012006f510a', 'transaction_id': '68b0a21cc1d01012006f510a'} | Transação removida com sucesso
2025-08-28 15:47:22 | INFO     | app.routes.transacoes_routes:remover_transacao:253 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a215c1d01012006f5109', 'transaction_id': '68b0a215c1d01012006f5109'} | Iniciando remoção de transação
2025-08-28 15:47:22 | DEBUG    | app.routes.transacoes_routes:remover_transacao:264 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a215c1d01012006f5109', 'transaction_id': '68b0a215c1d01012006f5109', 'deleted_count': 1} | Resultado delete_one
2025-08-28 15:47:22 | SUCCESS  | app.routes.transacoes_routes:remover_transacao:270 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a215c1d01012006f5109', 'transaction_id': '68b0a215c1d01012006f5109'} | Transação removida com sucesso
2025-08-28 15:47:26 | INFO     | app.routes.transacoes_routes:remover_transacao:253 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a20fc1d01012006f5108', 'transaction_id': '68b0a20fc1d01012006f5108'} | Iniciando remoção de transação
2025-08-28 15:47:26 | DEBUG    | app.routes.transacoes_routes:remover_transacao:264 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a20fc1d01012006f5108', 'transaction_id': '68b0a20fc1d01012006f5108', 'deleted_count': 1} | Resultado delete_one
2025-08-28 15:47:26 | SUCCESS  | app.routes.transacoes_routes:remover_transacao:270 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b0a20fc1d01012006f5108', 'transaction_id': '68b0a20fc1d01012006f5108'} | Transação removida com sucesso
2025-08-28 15:47:30 | INFO     | app.routes.transacoes_routes:remover_transacao:253 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fccc1d01012006f5107', 'transaction_id': '68b09fccc1d01012006f5107'} | Iniciando remoção de transação
2025-08-28 15:47:30 | DEBUG    | app.routes.transacoes_routes:remover_transacao:264 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fccc1d01012006f5107', 'transaction_id': '68b09fccc1d01012006f5107', 'deleted_count': 1} | Resultado delete_one
2025-08-28 15:47:30 | SUCCESS  | app.routes.transacoes_routes:remover_transacao:270 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fccc1d01012006f5107', 'transaction_id': '68b09fccc1d01012006f5107'} | Transação removida com sucesso
2025-08-28 15:47:34 | INFO     | app.routes.transacoes_routes:remover_transacao:253 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fc4c1d01012006f5106', 'transaction_id': '68b09fc4c1d01012006f5106'} | Iniciando remoção de transação
2025-08-28 15:47:34 | DEBUG    | app.routes.transacoes_routes:remover_transacao:264 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fc4c1d01012006f5106', 'transaction_id': '68b09fc4c1d01012006f5106', 'deleted_count': 1} | Resultado delete_one
2025-08-28 15:47:34 | SUCCESS  | app.routes.transacoes_routes:remover_transacao:270 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fc4c1d01012006f5106', 'transaction_id': '68b09fc4c1d01012006f5106'} | Transação removida com sucesso
2025-08-28 15:47:40 | INFO     | app.routes.transacoes_routes:listar_transacoes:46 | {'http_method': 'GET', 'endpoint': '/transacoes'} | Listando todas as transações
2025-08-28 15:47:40 | SUCCESS  | app.routes.transacoes_routes:listar_transacoes:54 | {'http_method': 'GET', 'endpoint': '/transacoes', 'count': 5} | Total de transações retornadas
2025-08-28 15:47:57 | INFO     | app.routes.transacoes_routes:remover_transacao:253 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fb6c1d01012006f5105', 'transaction_id': '68b09fb6c1d01012006f5105'} | Iniciando remoção de transação
2025-08-28 15:47:57 | DEBUG    | app.routes.transacoes_routes:remover_transacao:264 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fb6c1d01012006f5105', 'transaction_id': '68b09fb6c1d01012006f5105', 'deleted_count': 1} | Resultado delete_one
2025-08-28 15:47:57 | SUCCESS  | app.routes.transacoes_routes:remover_transacao:270 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fb6c1d01012006f5105', 'transaction_id': '68b09fb6c1d01012006f5105'} | Transação removida com sucesso
2025-08-28 15:48:00 | INFO     | app.routes.transacoes_routes:remover_transacao:253 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fafc1d01012006f5104', 'transaction_id': '68b09fafc1d01012006f5104'} | Iniciando remoção de transação
2025-08-28 15:48:00 | DEBUG    | app.routes.transacoes_routes:remover_transacao:264 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fafc1d01012006f5104', 'transaction_id': '68b09fafc1d01012006f5104', 'deleted_count': 1} | Resultado delete_one
2025-08-28 15:48:00 | SUCCESS  | app.routes.transacoes_routes:remover_transacao:270 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fafc1d01012006f5104', 'transaction_id': '68b09fafc1d01012006f5104'} | Transação removida com sucesso
2025-08-28 15:48:03 | INFO     | app.routes.transacoes_routes:remover_transacao:253 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fafc1d01012006f5104', 'transaction_id': '68b09fafc1d01012006f5104'} | Iniciando remoção de transação
2025-08-28 15:48:03 | WARNING  | app.routes.transacoes_routes:remover_transacao:260 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fafc1d01012006f5104', 'transaction_id': '68b09fafc1d01012006f5104'} | Transação não encontrada para remoção
2025-08-28 15:48:06 | INFO     | app.routes.transacoes_routes:remover_transacao:253 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fa8c1d01012006f5103', 'transaction_id': '68b09fa8c1d01012006f5103'} | Iniciando remoção de transação
2025-08-28 15:48:06 | DEBUG    | app.routes.transacoes_routes:remover_transacao:264 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fa8c1d01012006f5103', 'transaction_id': '68b09fa8c1d01012006f5103', 'deleted_count': 1} | Resultado delete_one
2025-08-28 15:48:06 | SUCCESS  | app.routes.transacoes_routes:remover_transacao:270 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09fa8c1d01012006f5103', 'transaction_id': '68b09fa8c1d01012006f5103'} | Transação removida com sucesso
2025-08-28 15:48:09 | INFO     | app.routes.transacoes_routes:remover_transacao:253 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09f9fc1d01012006f5102', 'transaction_id': '68b09f9fc1d01012006f5102'} | Iniciando remoção de transação
2025-08-28 15:48:09 | DEBUG    | app.routes.transacoes_routes:remover_transacao:264 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09f9fc1d01012006f5102', 'transaction_id': '68b09f9fc1d01012006f5102', 'deleted_count': 1} | Resultado delete_one
2025-08-28 15:48:09 | SUCCESS  | app.routes.transacoes_routes:remover_transacao:270 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09f9fc1d01012006f5102', 'transaction_id': '68b09f9fc1d01012006f5102'} | Transação removida com sucesso
2025-08-28 15:48:12 | INFO     | app.routes.transacoes_routes:remover_transacao:253 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09004b18e182f5a927515', 'transaction_id': '68b09004b18e182f5a927515'} | Iniciando remoção de transação
2025-08-28 15:48:12 | DEBUG    | app.routes.transacoes_routes:remover_transacao:264 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09004b18e182f5a927515', 'transaction_id': '68b09004b18e182f5a927515', 'deleted_count': 1} | Resultado delete_one
2025-08-28 15:48:12 | SUCCESS  | app.routes.transacoes_routes:remover_transacao:270 | {'http_method': 'DELETE', 'endpoint': '/transacoes/68b09004b18e182f5a927515', 'transaction_id': '68b09004b18e182f5a927515'} | Transação removida com sucesso
2025-08-28 15:48:37 | INFO     | app.routes.transacoes_routes:criar_transacao:80 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 120.0, 'descricao': 'Venda de ingressos de cinema', 'categoria': 'Lazer', 'subcategoria': 'Cinema e Teatro', 'forma_pagamento': <TipoPagamento.DEBITO: 'debito'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PF: 'pf'>, 'data_transacao': datetime.datetime(2025, 8, 28, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:48:37 | DEBUG    | app.routes.transacoes_routes:criar_transacao:111 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a4859a0aa7102eb2adc7'} | Resultado insert_one
2025-08-28 15:48:37 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:125 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a4859a0aa7102eb2adc7'} | Transação criada com sucesso
2025-08-28 15:48:39 | INFO     | app.routes.transacoes_routes:criar_transacao:80 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 15000.0, 'descricao': 'Venda de 50 vagas em curso Python', 'categoria': 'Educação', 'subcategoria': 'Cursos Online', 'forma_pagamento': <TipoPagamento.CREDITO: 'credito'>, 'e_parcelado': True, 'parcelas': 5, 'total_parcelas': 5, 'natureza_transacao': <NaturezaTransacao.PJ: 'pj'>, 'data_transacao': datetime.datetime(2025, 9, 12, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:48:39 | DEBUG    | app.routes.transacoes_routes:criar_transacao:111 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a4879a0aa7102eb2adc8'} | Resultado insert_one
2025-08-28 15:48:39 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:125 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a4879a0aa7102eb2adc8'} | Transação criada com sucesso
2025-08-28 15:48:46 | INFO     | app.routes.transacoes_routes:criar_transacao:80 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 300.0, 'descricao': 'Reembolso corrida Uber', 'categoria': 'Transporte', 'subcategoria': 'Táxi / App de Corrida', 'forma_pagamento': <TipoPagamento.PIX: 'pix'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PF: 'pf'>, 'data_transacao': datetime.datetime(2025, 8, 18, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:48:46 | DEBUG    | app.routes.transacoes_routes:criar_transacao:111 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a48e9a0aa7102eb2adc9'} | Resultado insert_one
2025-08-28 15:48:46 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:125 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a48e9a0aa7102eb2adc9'} | Transação criada com sucesso
2025-08-28 15:48:53 | INFO     | app.routes.transacoes_routes:criar_transacao:80 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 9200.0, 'descricao': 'Faturamento mensal serviço de transporte interno', 'categoria': 'Transporte', 'subcategoria': 'Combustível', 'forma_pagamento': <TipoPagamento.DEBITO: 'debito'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PJ: 'pj'>, 'data_transacao': datetime.datetime(2025, 9, 5, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:48:53 | DEBUG    | app.routes.transacoes_routes:criar_transacao:111 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a4959a0aa7102eb2adca'} | Resultado insert_one
2025-08-28 15:48:53 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:125 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a4959a0aa7102eb2adca'} | Transação criada com sucesso
2025-08-28 15:48:59 | INFO     | app.routes.transacoes_routes:criar_transacao:80 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 450.75, 'descricao': 'Venda de marmitas saudáveis', 'categoria': 'Alimentação', 'subcategoria': 'Lanches e Delivery', 'forma_pagamento': <TipoPagamento.CREDITO: 'credito'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PF: 'pf'>, 'data_transacao': datetime.datetime(2025, 8, 22, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:48:59 | DEBUG    | app.routes.transacoes_routes:criar_transacao:111 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a49b9a0aa7102eb2adcb'} | Resultado insert_one
2025-08-28 15:48:59 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:125 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a49b9a0aa7102eb2adcb'} | Transação criada com sucesso
2025-08-28 15:49:06 | INFO     | app.routes.transacoes_routes:criar_transacao:80 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 3500.0, 'descricao': 'Reembolso de despesas de viagem corporativa', 'categoria': 'Alimentação', 'subcategoria': 'Restaurantes', 'forma_pagamento': <TipoPagamento.PIX: 'pix'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PJ: 'pj'>, 'data_transacao': datetime.datetime(2025, 9, 10, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:49:06 | DEBUG    | app.routes.transacoes_routes:criar_transacao:111 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a4a29a0aa7102eb2adcc'} | Resultado insert_one
2025-08-28 15:49:06 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:125 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a4a29a0aa7102eb2adcc'} | Transação criada com sucesso
2025-08-28 15:49:12 | INFO     | app.routes.transacoes_routes:criar_transacao:80 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 300.0, 'descricao': 'Venda de artesanato em feira', 'categoria': 'Vendas', 'subcategoria': 'Feira', 'forma_pagamento': <TipoPagamento.DEBITO: 'debito'>, 'e_parcelado': True, 'parcelas': 2, 'total_parcelas': 2, 'natureza_transacao': <NaturezaTransacao.PF: 'pf'>, 'data_transacao': datetime.datetime(2025, 8, 30, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:49:12 | INFO     | app.routes.transacoes_routes:criar_transacao:86 | {'http_method': 'POST', 'endpoint': '/transacoes', 'categoria': 'Vendas'} | Categoria não encontrada, criando
2025-08-28 15:49:12 | DEBUG    | app.routes.transacoes_routes:criar_transacao:111 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a4a89a0aa7102eb2adce'} | Resultado insert_one
2025-08-28 15:49:12 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:125 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a4a89a0aa7102eb2adce'} | Transação criada com sucesso
2025-08-28 15:49:28 | INFO     | app.routes.transacoes_routes:criar_transacao:80 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 15000.0, 'descricao': 'Pagamento antecipado projeto Delta', 'categoria': 'Projetos', 'subcategoria': 'Desenvolvimento', 'forma_pagamento': <TipoPagamento.PIX: 'pix'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PJ: 'pj'>, 'data_transacao': datetime.datetime(2025, 9, 25, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:49:28 | INFO     | app.routes.transacoes_routes:criar_transacao:86 | {'http_method': 'POST', 'endpoint': '/transacoes', 'categoria': 'Projetos'} | Categoria não encontrada, criando
2025-08-28 15:49:28 | DEBUG    | app.routes.transacoes_routes:criar_transacao:111 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a4b89a0aa7102eb2add0'} | Resultado insert_one
2025-08-28 15:49:28 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:125 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a4b89a0aa7102eb2add0'} | Transação criada com sucesso
2025-08-28 15:49:37 | INFO     | app.routes.transacoes_routes:criar_transacao:80 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 670.75, 'descricao': 'Recebimento de venda online', 'categoria': 'Vendas', 'subcategoria': 'E-commerce', 'forma_pagamento': <TipoPagamento.CREDITO: 'credito'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PF: 'pf'>, 'data_transacao': datetime.datetime(2025, 9, 12, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:49:37 | INFO     | app.routes.transacoes_routes:criar_transacao:95 | {'http_method': 'POST', 'endpoint': '/transacoes', 'categoria': 'Vendas', 'subcategoria': 'E-commerce'} | Subcategoria não encontrada, adicionando
2025-08-28 15:49:37 | DEBUG    | app.routes.transacoes_routes:criar_transacao:111 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a4c19a0aa7102eb2add1'} | Resultado insert_one
2025-08-28 15:49:37 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:125 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a4c19a0aa7102eb2add1'} | Transação criada com sucesso
2025-08-28 15:49:42 | INFO     | app.routes.transacoes_routes:criar_transacao:80 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 8000.0, 'descricao': 'Retainer mensal cliente Beta', 'categoria': 'Serviços', 'subcategoria': 'Suporte', 'forma_pagamento': <TipoPagamento.DEBITO: 'debito'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PJ: 'pj'>, 'data_transacao': datetime.datetime(2025, 9, 5, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:49:42 | INFO     | app.routes.transacoes_routes:criar_transacao:86 | {'http_method': 'POST', 'endpoint': '/transacoes', 'categoria': 'Serviços'} | Categoria não encontrada, criando
2025-08-28 15:49:42 | DEBUG    | app.routes.transacoes_routes:criar_transacao:111 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a4c69a0aa7102eb2add3'} | Resultado insert_one
2025-08-28 15:49:42 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:125 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a4c69a0aa7102eb2add3'} | Transação criada com sucesso
2025-08-28 15:49:48 | INFO     | app.routes.transacoes_routes:criar_transacao:80 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 2500.5, 'descricao': 'Venda de produto artesanal', 'categoria': 'Vendas', 'subcategoria': 'Artesanato', 'forma_pagamento': <TipoPagamento.PIX: 'pix'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PF: 'pf'>, 'data_transacao': datetime.datetime(2025, 8, 20, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:49:48 | INFO     | app.routes.transacoes_routes:criar_transacao:95 | {'http_method': 'POST', 'endpoint': '/transacoes', 'categoria': 'Vendas', 'subcategoria': 'Artesanato'} | Subcategoria não encontrada, adicionando
2025-08-28 15:49:48 | DEBUG    | app.routes.transacoes_routes:criar_transacao:111 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a4cc9a0aa7102eb2add4'} | Resultado insert_one
2025-08-28 15:49:48 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:125 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a4cc9a0aa7102eb2add4'} | Transação criada com sucesso
2025-08-28 15:49:54 | INFO     | app.routes.transacoes_routes:criar_transacao:80 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 12000.0, 'descricao': 'Faturamento projeto Alpha', 'categoria': 'Serviços', 'subcategoria': 'Consultoria', 'forma_pagamento': <TipoPagamento.CREDITO: 'credito'>, 'e_parcelado': True, 'parcelas': 3, 'total_parcelas': 3, 'natureza_transacao': <NaturezaTransacao.PJ: 'pj'>, 'data_transacao': datetime.datetime(2025, 8, 15, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 15:49:54 | INFO     | app.routes.transacoes_routes:criar_transacao:95 | {'http_method': 'POST', 'endpoint': '/transacoes', 'categoria': 'Serviços', 'subcategoria': 'Consultoria'} | Subcategoria não encontrada, adicionando
2025-08-28 15:49:54 | DEBUG    | app.routes.transacoes_routes:criar_transacao:111 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0a4d29a0aa7102eb2add5'} | Resultado insert_one
2025-08-28 15:49:54 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:125 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0a4d29a0aa7102eb2add5'} | Transação criada com sucesso
2025-08-28 15:50:02 | INFO     | app.routes.transacoes_routes:listar_transacoes:46 | {'http_method': 'GET', 'endpoint': '/transacoes'} | Listando todas as transações
2025-08-28 15:50:02 | SUCCESS  | app.routes.transacoes_routes:listar_transacoes:54 | {'http_method': 'GET', 'endpoint': '/transacoes', 'count': 12} | Total de transações retornadas
2025-08-28 15:50:17 | INFO     | app.routes.categorias_routes:listar_categorias:33 | {'http_method': 'GET', 'endpoint': '/categorias'} | Listando todas as categorias
2025-08-28 15:51:47 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 15:51:47 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 15:51:47 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 15:51:47 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 15:51:47 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 15:51:47 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 15:51:47 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 15:51:47 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 15:51:47 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 15:51:47 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 15:51:54 | INFO     | app.routes.categorias_routes:listar_categorias:33 | {'http_method': 'GET', 'endpoint': '/categorias'} | Listando todas as categorias
2025-08-28 15:53:03 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 15:53:03 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 15:53:03 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 15:53:04 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 15:53:04 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 15:53:04 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 15:53:04 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 15:53:04 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 15:53:04 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 15:53:04 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 15:53:12 | INFO     | app.routes.categorias_routes:listar_categorias:33 | {'http_method': 'GET', 'endpoint': '/categorias'} | Listando todas as categorias
2025-08-28 15:53:12 | SUCCESS  | app.routes.categorias_routes:listar_categorias:49 | {'http_method': 'GET', 'endpoint': '/categorias'} | 13 categorias listadas
2025-08-28 15:57:26 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 15:57:26 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 15:57:26 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 15:57:26 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 15:57:27 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 15:57:27 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 15:57:27 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 15:57:27 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 15:57:27 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 15:57:27 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 15:58:42 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 15:58:42 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 15:58:42 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 15:58:42 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 15:58:42 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 15:58:42 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 15:58:42 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 15:58:42 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 15:58:42 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 15:58:42 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 16:00:18 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 16:00:18 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 16:00:18 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 16:00:19 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 16:00:19 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 16:00:19 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 16:00:19 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 16:00:19 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 16:00:19 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 16:00:19 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 16:00:48 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 16:00:48 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 16:00:48 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 16:00:48 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 16:00:48 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 16:00:48 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 16:00:48 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 16:01:04 | INFO     | app.routes.categorias_routes:listar_categorias:33 | {'http_method': 'GET', 'endpoint': '/categorias'} | Listando todas as categorias
2025-08-28 16:01:04 | SUCCESS  | app.routes.categorias_routes:listar_categorias:49 | {'http_method': 'GET', 'endpoint': '/categorias'} | 13 categorias listadas
2025-08-28 16:01:18 | INFO     | app.routes.categorias_routes:excluir_categoria:259 | {'http_method': 'DELETE', 'endpoint': '/categorias/68b09c391be6500909ce6ef3', 'category_id': '68b09c391be6500909ce6ef3'} | Iniciando exclusão de categoria
2025-08-28 16:01:18 | DEBUG    | app.routes.categorias_routes:excluir_categoria:266 | {'http_method': 'DELETE', 'endpoint': '/categorias/68b09c391be6500909ce6ef3', 'deleted_count': 1} | Resultado delete_one
2025-08-28 16:01:18 | SUCCESS  | app.routes.categorias_routes:excluir_categoria:272 | {'http_method': 'DELETE', 'endpoint': '/categorias/68b09c391be6500909ce6ef3', 'category_id': '68b09c391be6500909ce6ef3'} | Categoria excluída com sucesso
2025-08-28 16:01:30 | INFO     | app.routes.categorias_routes:excluir_categoria:259 | {'http_method': 'DELETE', 'endpoint': '/categorias/68b09cd828b51f944925e6ec', 'category_id': '68b09cd828b51f944925e6ec'} | Iniciando exclusão de categoria
2025-08-28 16:01:30 | DEBUG    | app.routes.categorias_routes:excluir_categoria:266 | {'http_method': 'DELETE', 'endpoint': '/categorias/68b09cd828b51f944925e6ec', 'deleted_count': 1} | Resultado delete_one
2025-08-28 16:01:30 | SUCCESS  | app.routes.categorias_routes:excluir_categoria:272 | {'http_method': 'DELETE', 'endpoint': '/categorias/68b09cd828b51f944925e6ec', 'category_id': '68b09cd828b51f944925e6ec'} | Categoria excluída com sucesso
2025-08-28 16:01:43 | INFO     | app.routes.categorias_routes:listar_categorias:33 | {'http_method': 'GET', 'endpoint': '/categorias'} | Listando todas as categorias
2025-08-28 16:01:43 | SUCCESS  | app.routes.categorias_routes:listar_categorias:49 | {'http_method': 'GET', 'endpoint': '/categorias'} | 11 categorias listadas
2025-08-28 16:01:48 | INFO     | app.routes.categorias_routes:excluir_categoria:259 | {'http_method': 'DELETE', 'endpoint': '/categorias/68b09eb5292ef6b77b237770', 'category_id': '68b09eb5292ef6b77b237770'} | Iniciando exclusão de categoria
2025-08-28 16:01:48 | DEBUG    | app.routes.categorias_routes:excluir_categoria:266 | {'http_method': 'DELETE', 'endpoint': '/categorias/68b09eb5292ef6b77b237770', 'deleted_count': 1} | Resultado delete_one
2025-08-28 16:01:48 | SUCCESS  | app.routes.categorias_routes:excluir_categoria:272 | {'http_method': 'DELETE', 'endpoint': '/categorias/68b09eb5292ef6b77b237770', 'category_id': '68b09eb5292ef6b77b237770'} | Categoria excluída com sucesso
2025-08-28 16:01:54 | INFO     | app.routes.categorias_routes:listar_categorias:33 | {'http_method': 'GET', 'endpoint': '/categorias'} | Listando todas as categorias
2025-08-28 16:01:54 | SUCCESS  | app.routes.categorias_routes:listar_categorias:49 | {'http_method': 'GET', 'endpoint': '/categorias'} | 10 categorias listadas
2025-08-28 16:02:08 | INFO     | app.routes.categorias_routes:excluir_categoria:259 | {'http_method': 'DELETE', 'endpoint': '/categorias/68b09ed6292ef6b77b237773', 'category_id': '68b09ed6292ef6b77b237773'} | Iniciando exclusão de categoria
2025-08-28 16:02:08 | DEBUG    | app.routes.categorias_routes:excluir_categoria:266 | {'http_method': 'DELETE', 'endpoint': '/categorias/68b09ed6292ef6b77b237773', 'deleted_count': 1} | Resultado delete_one
2025-08-28 16:02:08 | SUCCESS  | app.routes.categorias_routes:excluir_categoria:272 | {'http_method': 'DELETE', 'endpoint': '/categorias/68b09ed6292ef6b77b237773', 'category_id': '68b09ed6292ef6b77b237773'} | Categoria excluída com sucesso
2025-08-28 16:02:13 | INFO     | app.routes.categorias_routes:listar_categorias:33 | {'http_method': 'GET', 'endpoint': '/categorias'} | Listando todas as categorias
2025-08-28 16:02:13 | SUCCESS  | app.routes.categorias_routes:listar_categorias:49 | {'http_method': 'GET', 'endpoint': '/categorias'} | 9 categorias listadas
2025-08-28 16:03:55 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 16:03:55 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 16:03:55 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 16:03:56 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 16:03:56 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 16:03:56 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 16:03:56 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 16:03:56 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 16:03:56 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 16:03:56 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 16:08:44 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 16:08:44 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 16:08:44 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 16:08:45 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 16:08:45 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 16:08:45 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 16:08:45 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 16:08:45 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 16:08:45 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 16:08:45 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 16:11:37 | INFO     | app.routes.transacoes_routes:criar_transacao:121 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 750.0, 'descricao': 'Venda de curso online', 'categoria': 'CursosDIY', 'subcategoria': 'Marcenaria', 'forma_pagamento': <TipoPagamento.PIX: 'pix'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PF: 'pf'>, 'data_transacao': datetime.datetime(2025, 8, 28, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 16:11:37 | INFO     | app.routes.transacoes_routes:criar_transacao:127 | {'http_method': 'POST', 'endpoint': '/transacoes', 'categoria': 'CursosDIY'} | Categoria não encontrada, criando
2025-08-28 16:11:37 | ERROR    | app.routes.transacoes_routes:criar_transacao:164 | {'http_method': 'POST', 'endpoint': '/transacoes', 'error': "1 validation error for CategoriaCreate\nsubcategorias\n  Input should be a valid list [type=list_type, input_value='Marcenaria', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/list_type"} | Erro interno ao criar transação
Traceback (most recent call last):

  File "<string>", line 1, in <module>
  File "/usr/lib/python3.12/multiprocessing/spawn.py", line 122, in spawn_main
    exitcode = _main(fd, parent_sentinel)
               │     │   └ 4
               │     └ 7
               └ <function _main at 0x7ea4669dd940>
  File "/usr/lib/python3.12/multiprocessing/spawn.py", line 135, in _main
    return self._bootstrap(parent_sentinel)
           │    │          └ 4
           │    └ <function BaseProcess._bootstrap at 0x7ea466abbc40>
           └ <SpawnProcess name='SpawnProcess-3' parent=59296 started>
  File "/usr/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
    │    └ <function BaseProcess.run at 0x7ea466abb1a0>
    └ <SpawnProcess name='SpawnProcess-3' parent=59296 started>
  File "/usr/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {'config': <uvicorn.config.Config object at 0x7ea465e901d0>, 'target': <bound method Server.run of <uvicorn.server.Server obj...
    │    │        │    │        └ <SpawnProcess name='SpawnProcess-3' parent=59296 started>
    │    │        │    └ ()
    │    │        └ <SpawnProcess name='SpawnProcess-3' parent=59296 started>
    │    └ <function subprocess_started at 0x7ea465efdee0>
    └ <SpawnProcess name='SpawnProcess-3' parent=59296 started>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/uvicorn/_subprocess.py", line 80, in subprocess_started
    target(sockets=sockets)
    │              └ [<socket.socket fd=3, family=2, type=1, proto=0, laddr=('0.0.0.0', 8000)>]
    └ <bound method Server.run of <uvicorn.server.Server object at 0x7ea465ced130>>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/uvicorn/server.py", line 67, in run
    return asyncio.run(self.serve(sockets=sockets))
           │       │   │    │             └ [<socket.socket fd=3, family=2, type=1, proto=0, laddr=('0.0.0.0', 8000)>]
           │       │   │    └ <function Server.serve at 0x7ea465efd300>
           │       │   └ <uvicorn.server.Server object at 0x7ea465ced130>
           │       └ <function run at 0x7ea46652aca0>
           └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>
  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object Server.serve at 0x7ea466a54120>
           │      └ <function Runner.run at 0x7ea4665863e0>
           └ <asyncio.runners.Runner object at 0x7ea465eb34a0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<Server.serve() running at /home/record/repos/financas_backend/.venv/lib/python3.12/site-pac...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7ea466584040>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7ea465eb34a0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7ea466583f60>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7ea466585da0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7ea4667ee2a0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/uvicorn/protocols/http/h11_impl.py", line 403, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
                   └ <uvicorn.middleware.proxy_headers.ProxyHeadersMiddleware object at 0x7ea464f5cc50>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    return await self.app(scope, receive, send)
                 │    │   │      │        └ <bound method RequestResponseCycle.send of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
                 │    │   │      └ <bound method RequestResponseCycle.receive of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
                 │    │   └ {'type': 'http', 'asgi': {'version': '3.0', 'spec_version': '2.3'}, 'http_version': '1.1', 'server': ('127.0.0.1', 8000), 'cl...
                 │    └ <fastapi.applications.FastAPI object at 0x7ea465d781d0>
                 └ <uvicorn.middleware.proxy_headers.ProxyHeadersMiddleware object at 0x7ea464f5cc50>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/fastapi/applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
                           │      │        └ <bound method RequestResponseCycle.send of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
                           │      └ <bound method RequestResponseCycle.receive of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
                           └ {'type': 'http', 'asgi': {'version': '3.0', 'spec_version': '2.3'}, 'http_version': '1.1', 'server': ('127.0.0.1', 8000), 'cl...
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/starlette/applications.py", line 113, in __call__
    await self.middleware_stack(scope, receive, send)
          │    │                │      │        └ <bound method RequestResponseCycle.send of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
          │    │                │      └ <bound method RequestResponseCycle.receive of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
          │    │                └ {'type': 'http', 'asgi': {'version': '3.0', 'spec_version': '2.3'}, 'http_version': '1.1', 'server': ('127.0.0.1', 8000), 'cl...
          │    └ <starlette.middleware.errors.ServerErrorMiddleware object at 0x7ea4649dad80>
          └ <fastapi.applications.FastAPI object at 0x7ea465d781d0>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/starlette/middleware/errors.py", line 164, in __call__
    await self.app(scope, receive, _send)
          │    │   │      │        └ <function ServerErrorMiddleware.__call__.<locals>._send at 0x7ea465cf68e0>
          │    │   │      └ <bound method RequestResponseCycle.receive of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
          │    │   └ {'type': 'http', 'asgi': {'version': '3.0', 'spec_version': '2.3'}, 'http_version': '1.1', 'server': ('127.0.0.1', 8000), 'cl...
          │    └ <starlette.middleware.cors.CORSMiddleware object at 0x7ea4649dabd0>
          └ <starlette.middleware.errors.ServerErrorMiddleware object at 0x7ea4649dad80>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/starlette/middleware/cors.py", line 93, in __call__
    await self.simple_response(scope, receive, send, request_headers=headers)
          │    │               │      │        │                     └ Headers({'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '316', 'sec-ch-ua-platform': '"Windows"', 'u...
          │    │               │      │        └ <function ServerErrorMiddleware.__call__.<locals>._send at 0x7ea465cf68e0>
          │    │               │      └ <bound method RequestResponseCycle.receive of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
          │    │               └ {'type': 'http', 'asgi': {'version': '3.0', 'spec_version': '2.3'}, 'http_version': '1.1', 'server': ('127.0.0.1', 8000), 'cl...
          │    └ <function CORSMiddleware.simple_response at 0x7ea464f4db20>
          └ <starlette.middleware.cors.CORSMiddleware object at 0x7ea4649dabd0>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/starlette/middleware/cors.py", line 144, in simple_response
    await self.app(scope, receive, send)
          │    │   │      │        └ functools.partial(<bound method CORSMiddleware.send of <starlette.middleware.cors.CORSMiddleware object at 0x7ea4649dabd0>>, ...
          │    │   │      └ <bound method RequestResponseCycle.receive of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
          │    │   └ {'type': 'http', 'asgi': {'version': '3.0', 'spec_version': '2.3'}, 'http_version': '1.1', 'server': ('127.0.0.1', 8000), 'cl...
          │    └ <starlette.middleware.exceptions.ExceptionMiddleware object at 0x7ea4649dab10>
          └ <starlette.middleware.cors.CORSMiddleware object at 0x7ea4649dabd0>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/starlette/middleware/exceptions.py", line 63, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
          │                            │    │    │     │      │        └ functools.partial(<bound method CORSMiddleware.send of <starlette.middleware.cors.CORSMiddleware object at 0x7ea4649dabd0>>, ...
          │                            │    │    │     │      └ <bound method RequestResponseCycle.receive of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
          │                            │    │    │     └ {'type': 'http', 'asgi': {'version': '3.0', 'spec_version': '2.3'}, 'http_version': '1.1', 'server': ('127.0.0.1', 8000), 'cl...
          │                            │    │    └ <starlette.requests.Request object at 0x7ea4649ff350>
          │                            │    └ <fastapi.routing.APIRouter object at 0x7ea464973e30>
          │                            └ <starlette.middleware.exceptions.ExceptionMiddleware object at 0x7ea4649dab10>
          └ <function wrap_app_handling_exceptions at 0x7ea4650ac900>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
          │   │      │        └ <function wrap_app_handling_exceptions.<locals>.wrapped_app.<locals>.sender at 0x7ea4647496c0>
          │   │      └ <bound method RequestResponseCycle.receive of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
          │   └ {'type': 'http', 'asgi': {'version': '3.0', 'spec_version': '2.3'}, 'http_version': '1.1', 'server': ('127.0.0.1', 8000), 'cl...
          └ <fastapi.routing.APIRouter object at 0x7ea464973e30>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/starlette/routing.py", line 716, in __call__
    await self.middleware_stack(scope, receive, send)
          │    │                │      │        └ <function wrap_app_handling_exceptions.<locals>.wrapped_app.<locals>.sender at 0x7ea4647496c0>
          │    │                │      └ <bound method RequestResponseCycle.receive of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
          │    │                └ {'type': 'http', 'asgi': {'version': '3.0', 'spec_version': '2.3'}, 'http_version': '1.1', 'server': ('127.0.0.1', 8000), 'cl...
          │    └ <bound method Router.app of <fastapi.routing.APIRouter object at 0x7ea464973e30>>
          └ <fastapi.routing.APIRouter object at 0x7ea464973e30>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/starlette/routing.py", line 736, in app
    await route.handle(scope, receive, send)
          │     │      │      │        └ <function wrap_app_handling_exceptions.<locals>.wrapped_app.<locals>.sender at 0x7ea4647496c0>
          │     │      │      └ <bound method RequestResponseCycle.receive of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
          │     │      └ {'type': 'http', 'asgi': {'version': '3.0', 'spec_version': '2.3'}, 'http_version': '1.1', 'server': ('127.0.0.1', 8000), 'cl...
          │     └ <function Route.handle at 0x7ea4650ade40>
          └ APIRoute(path='/transacoes/', name='criar_transacao', methods=['POST'])
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/starlette/routing.py", line 290, in handle
    await self.app(scope, receive, send)
          │    │   │      │        └ <function wrap_app_handling_exceptions.<locals>.wrapped_app.<locals>.sender at 0x7ea4647496c0>
          │    │   │      └ <bound method RequestResponseCycle.receive of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
          │    │   └ {'type': 'http', 'asgi': {'version': '3.0', 'spec_version': '2.3'}, 'http_version': '1.1', 'server': ('127.0.0.1', 8000), 'cl...
          │    └ <function request_response.<locals>.app at 0x7ea4649a6840>
          └ APIRoute(path='/transacoes/', name='criar_transacao', methods=['POST'])
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/starlette/routing.py", line 78, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
          │                            │    │        │      │        └ <function wrap_app_handling_exceptions.<locals>.wrapped_app.<locals>.sender at 0x7ea4647496c0>
          │                            │    │        │      └ <bound method RequestResponseCycle.receive of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
          │                            │    │        └ {'type': 'http', 'asgi': {'version': '3.0', 'spec_version': '2.3'}, 'http_version': '1.1', 'server': ('127.0.0.1', 8000), 'cl...
          │                            │    └ <starlette.requests.Request object at 0x7ea4649ffa10>
          │                            └ <function request_response.<locals>.app.<locals>.app at 0x7ea464749760>
          └ <function wrap_app_handling_exceptions at 0x7ea4650ac900>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
          │   │      │        └ <function wrap_app_handling_exceptions.<locals>.wrapped_app.<locals>.sender at 0x7ea4647498a0>
          │   │      └ <bound method RequestResponseCycle.receive of <uvicorn.protocols.http.h11_impl.RequestResponseCycle object at 0x7ea4647b4140>>
          │   └ {'type': 'http', 'asgi': {'version': '3.0', 'spec_version': '2.3'}, 'http_version': '1.1', 'server': ('127.0.0.1', 8000), 'cl...
          └ <function request_response.<locals>.app.<locals>.app at 0x7ea464749760>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/starlette/routing.py", line 75, in app
    response = await f(request)
                     │ └ <starlette.requests.Request object at 0x7ea4649ffa10>
                     └ <function get_request_handler.<locals>.app at 0x7ea4649a6700>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/fastapi/routing.py", line 302, in app
    raw_response = await run_endpoint_function(
                         └ <function run_endpoint_function at 0x7ea4650ac180>
  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/fastapi/routing.py", line 213, in run_endpoint_function
    return await dependant.call(**values)
                 │         │      └ {'transacoes_col': AsyncIOMotorCollection(Collection(Database(MongoClient(host=['localhost:27017'], document_class=dict, tz_a...
                 │         └ <function criar_transacao at 0x7ea46494bb00>
                 └ Dependant(path_params=[], query_params=[], header_params=[], cookie_params=[], body_params=[ModelField(field_info=Body(Pydant...

> File "/home/record/repos/financas_backend/app/routes/transacoes_routes.py", line 128, in criar_transacao
    nova_cat = CategoriaCreate(
               └ <class 'app.models.categorias_model.CategoriaCreate'>

  File "/home/record/repos/financas_backend/.venv/lib/python3.12/site-packages/pydantic/main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     │    │                      │               │                   └ CategoriaCreate()
                     │    │                      │               └ {'categoria_nome': 'CursosDIY', 'limite': 0.0, 'subcategorias': 'Marcenaria'}
                     │    │                      └ <method 'validate_python' of 'pydantic_core._pydantic_core.SchemaValidator' objects>
                     │    └ SchemaValidator(title="CategoriaCreate", validator=Model(
                     │          ModelValidator {
                     │              revalidate: Never,
                     │              validator: ...
                     └ CategoriaCreate()

pydantic_core._pydantic_core.ValidationError: 1 validation error for CategoriaCreate
subcategorias
  Input should be a valid list [type=list_type, input_value='Marcenaria', input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/list_type
2025-08-28 16:11:57 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 16:11:57 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 16:11:57 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 16:11:58 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 16:11:58 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 16:11:58 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 16:11:58 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 16:11:58 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 16:11:58 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 16:11:58 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 16:12:01 | INFO     | app.routes.transacoes_routes:criar_transacao:121 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.ENTRADA: 'entrada'>, 'valor': 750.0, 'descricao': 'Venda de curso online', 'categoria': 'CursosDIY', 'subcategoria': 'Marcenaria', 'forma_pagamento': <TipoPagamento.PIX: 'pix'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PF: 'pf'>, 'data_transacao': datetime.datetime(2025, 8, 28, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 16:12:01 | INFO     | app.routes.transacoes_routes:criar_transacao:127 | {'http_method': 'POST', 'endpoint': '/transacoes', 'categoria': 'CursosDIY'} | Categoria não encontrada, criando
2025-08-28 16:12:01 | DEBUG    | app.routes.transacoes_routes:criar_transacao:143 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0aa014cbc82d5bc983c61'} | Resultado insert_one
2025-08-28 16:12:01 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:157 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0aa014cbc82d5bc983c61'} | Transação criada com sucesso
2025-08-28 16:12:09 | INFO     | app.routes.categorias_routes:listar_categorias:33 | {'http_method': 'GET', 'endpoint': '/categorias'} | Listando todas as categorias
2025-08-28 16:12:09 | SUCCESS  | app.routes.categorias_routes:listar_categorias:49 | {'http_method': 'GET', 'endpoint': '/categorias'} | 10 categorias listadas
2025-08-28 16:13:53 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 16:13:53 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 16:13:53 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 16:13:54 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 16:13:54 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 16:13:54 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 16:13:54 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 16:13:54 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 16:13:54 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 16:13:54 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 16:15:09 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 16:15:09 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 16:15:09 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 16:15:09 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 16:15:09 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 16:15:09 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 16:15:09 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 16:15:09 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 16:15:09 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 16:15:09 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 16:15:40 | INFO     | app.routes.transacoes_routes:criar_transacao:121 | {'http_method': 'POST', 'endpoint': '/transacoes', 'data': {'tipo': <TipoTransacao.SAIDA: 'saida'>, 'valor': 120.0, 'descricao': 'Almoço com cliente', 'categoria': 'Alimentação', 'subcategoria': 'Delivery Express', 'forma_pagamento': <TipoPagamento.DEBITO: 'debito'>, 'e_parcelado': False, 'parcelas': None, 'total_parcelas': None, 'natureza_transacao': <NaturezaTransacao.PF: 'pf'>, 'data_transacao': datetime.datetime(2025, 8, 28, 0, 0)}} | Recebendo dados de nova transação
2025-08-28 16:15:40 | INFO     | app.routes.transacoes_routes:criar_transacao:137 | {'http_method': 'POST', 'endpoint': '/transacoes', 'categoria': 'Alimentação', 'subcategoria': 'Delivery Express'} | Subcategoria não encontrada, adicionando
2025-08-28 16:15:40 | DEBUG    | app.routes.transacoes_routes:criar_transacao:152 | {'http_method': 'POST', 'endpoint': '/transacoes', 'acknowledged': True, 'inserted_id': '68b0aadc5ab24935214c75cc'} | Resultado insert_one
2025-08-28 16:15:40 | SUCCESS  | app.routes.transacoes_routes:criar_transacao:166 | {'http_method': 'POST', 'endpoint': '/transacoes', 'transaction_id': '68b0aadc5ab24935214c75cc'} | Transação criada com sucesso
2025-08-28 16:15:55 | INFO     | app.routes.categorias_routes:listar_categorias:33 | {'http_method': 'GET', 'endpoint': '/categorias'} | Listando todas as categorias
2025-08-28 16:15:55 | SUCCESS  | app.routes.categorias_routes:listar_categorias:49 | {'http_method': 'GET', 'endpoint': '/categorias'} | 10 categorias listadas
2025-08-28 16:24:40 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 16:24:40 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 16:24:40 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 16:24:40 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 16:28:44 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 16:28:44 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 16:28:44 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 16:28:44 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 16:28:44 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 16:28:44 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 16:28:44 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 16:29:12 | SUCCESS  | app.routes.dashboard_routes:extrato_financeiro:68 | {'http_method': 'GET', 'endpoint': '/dashboard/extrato', 'entradas': 67792.0, 'saidas': 120.0, 'count': 14} | Extrato gerado
2025-08-28 16:29:56 | SUCCESS  | app.routes.dashboard_routes:extrato_financeiro:68 | {'http_method': 'GET', 'endpoint': '/dashboard/extrato', 'entradas': 0.0, 'saidas': 0.0, 'count': 0} | Extrato gerado
2025-08-28 16:30:13 | SUCCESS  | app.routes.dashboard_routes:rendimento_periodo:118 | {'http_method': 'GET', 'endpoint': '/dashboard/rendimento-periodo', 'year': 2025} | Rendimento por período gerado
2025-08-28 16:30:30 | SUCCESS  | app.routes.dashboard_routes:opcoes_transacao:142 | {'http_method': 'GET', 'endpoint': '/dashboard/opcoes-transacao', 'count': 10} | Opções retornadas
2025-08-28 16:31:01 | SUCCESS  | app.routes.dashboard_routes:gastos_por_categoria:189 | {'http_method': 'GET', 'endpoint': '/dashboard/gastos-categoria', 'count': 10} | Gastos por categoria gerados
2025-08-28 16:35:23 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 16:35:23 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 16:35:23 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 16:35:23 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 16:35:23 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 16:35:23 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 16:35:23 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 16:35:23 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 16:35:23 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 16:35:23 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 16:35:48 | SUCCESS  | app.routes.dashboard_routes:gastos_por_categoria:196 | {'http_method': 'GET', 'endpoint': '/dashboard/gastos-por-categoria', 'count': 10} | Gastos por categoria gerados
2025-08-28 16:36:17 | SUCCESS  | app.routes.dashboard_routes:entradas_por_categoria:254 | {'http_method': 'GET', 'endpoint': '/dashboard/entradas-por-categoria', 'count': 10} | Entradas por categoria geradas
2025-08-28 16:39:31 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 16:39:31 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 16:39:31 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
2025-08-28 16:39:31 | INFO     | app.logger:setup_logger:83 | {} | Logger configurado para financas_backend
2025-08-28 16:39:31 | INFO     | app.main:lifespan:17 | {'event': 'startup'} | Iniciando aplicação FastAPI
2025-08-28 16:39:31 | INFO     | app.database:connect_to_mongo:18 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Iniciando conexão com mongoDB
2025-08-28 16:39:31 | DEBUG    | app.database:connect_to_mongo:19 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Database: finances-db
2025-08-28 16:39:31 | DEBUG    | app.database:connect_to_mongo:20 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | URL: mongodb://admin:password@localhost:27017/finances-db?authSource=admin&replicaSet=rs0
2025-08-28 16:39:31 | INFO     | app.database:connect_to_mongo:28 | {'operation': 'connect', 'collection': None, 'database': 'finances-db'} | Conectado ao MongoDB com sucesso
2025-08-28 16:39:31 | SUCCESS  | app.main:lifespan:20 | {'event': 'startup'} | Aplicação iniciada com sucesso
2025-08-28 16:40:03 | SUCCESS  | app.routes.dashboard_routes:gastos_por_categoria:198 | {'http_method': 'GET', 'endpoint': '/dashboard/gastos-por-categoria', 'count': 10} | Gastos por categoria gerados
2025-08-28 16:40:36 | SUCCESS  | app.routes.dashboard_routes:gastos_por_categoria:198 | {'http_method': 'GET', 'endpoint': '/dashboard/gastos-por-categoria', 'count': 10} | Gastos por categoria gerados
2025-08-28 16:44:19 | INFO     | app.main:lifespan:26 | {'event': 'shutdown'} | Encerrando a aplicação
2025-08-28 16:44:19 | INFO     | app.database:close_mongo_connection:39 | {} | Conexão com MongoDB fechada
2025-08-28 16:44:19 | INFO     | app.main:lifespan:28 | {'event': 'shutdown'} | Aplicação encerrada
